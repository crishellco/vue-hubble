"use strict";const e=(e,t,n)=>{const r=n=>String.prototype.split.call(t,n).filter(Boolean).reduce((e,t)=>null!=e?e[t]:e,e),o=r(/[,[\]]+?/)||r(/[,[\].]+?/);return void 0===o||o===e?n:o},t=(t,n)=>{if(!n)return"";const r=[n];let o=t.$hubble.enableDeepNamespacing,i=e(t.$options,["hubble","namespace"]);if(i)if(o){let n=t;do{const t=e(n.$options,["hubble","namespace"]);t&&r.push(t),n=n.$parent}while(n)}else r.push(i);return r.reverse().join("--")},n=(e,{arg:n,value:r,oldValue:o},{context:i})=>{if(!i.$hubble.environment.includes(process.env.NODE_ENV))return;const s=t(i,o),u=t(i,r);switch(n=n||i.$hubble.defaultSelectorType,s&&e.removeAttribute("v-hubble"),u&&e.setAttributeNode(e.ownerDocument.createAttribute("v-hubble")),n){case"class":s&&e.classList.remove(s),u&&e.classList.add(u);break;case"id":e.id=u;break;case"attr":s&&e.removeAttribute(s),u&&e.setAttributeNode(e.ownerDocument.createAttribute(u));break;default:console.warn(`${n} is not a valid selector type, using attr instead`),s&&e.removeAttribute(s),u&&e.setAttributeNode(e.ownerDocument.createAttribute(u))}};var r={bind:n,inserted:n,update:n};let o=!1;const i={defaultSelectorType:"attr",enableDeepNamespacing:!0,environment:"test"};function s(e,t={}){e.prototype.$hubble=Object.assign(i,t),e.prototype.$hubble.environment=[].concat(e.prototype.$hubble.environment),o||(e.directive("hubble",r),o=!0)}"undefined"!=typeof window&&window.Vue&&window.Vue.use(s),module.exports=s;
