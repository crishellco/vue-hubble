"use strict";const e=(e,t,n)=>{const o=n=>String.prototype.split.call(t,n).filter(Boolean).reduce((e,t)=>null!=e?e[t]:e,e),r=o(/[,[\]]+?/)||o(/[,[\].]+?/);return void 0===r||r===e?n:r},t=(t,n)=>{if(!n)return"";const o=[n];if(e(t.$options,["hubble","namespace"])){let n=t;do{const t=e(n.$options,["hubble","namespace"]);t&&o.push(t),n=n.$parent}while(n)}return o.reverse().join("--")},n=(e,{arg:n,value:o,oldValue:r},{context:s})=>{if(s.$hubble.environment.includes(process.env.NODE_ENV))switch(r=t(s,r),o=t(s,o),n=n||s.$hubble.defaultSelectorType){case"class":r&&e.classList.remove(r),o&&e.classList.add(o);break;case"id":e.id=o;break;case"attr":r&&e.removeAttribute(r),o&&e.setAttributeNode(e.ownerDocument.createAttribute(o));break;default:console.warn(`${n} is not a value selector type, using attr instead`),r&&e.removeAttribute(r),o&&e.setAttributeNode(e.ownerDocument.createAttribute(o))}};var o={bind:n,inserted:n,update:n};let r=!1;const s={defaultSelectorType:"attr",environment:"test"};function i(e,t={}){e.prototype.$hubble=Object.assign(s,t),e.prototype.$hubble.environment=[].concat(e.prototype.$hubble.environment),r||(e.directive("hubble",o),r=!0)}"undefined"!=typeof window&&window.Vue&&window.Vue.use(i),module.exports=i;
